{"version":3,"sources":["login.js","chat.js","App.js","index.js"],"names":["withAuth0","useAuth0","isAuthenticated","loginWithRedirect","className","onClick","superagent","require","io","config","socket","connect","process","Chat","user","useState","message","state","setState","chat","setChat","participants","setParticipants","rooms","setRooms","newRoom","setNewRoom","gifArray","setGifArray","activeRoom","setActiveRoom","useEffect","on","payload","console","log","arr","type","rez","get","query","api_key","then","results","body","data","forEach","el","push","images","fixed_width","url","catch","error","emit","room","Data","set","handleAPICall","req","res","a","superagentResults","gamble","workable","switchRoom","e","selectedRoom","target","getAttribute","map","index","placeholder","value","onChange","class","alt","src","onChang","onKeyDown","key","ent","preventDefault","clickMe","App","props","info","this","auth0","nickname","React","Component","ReactDOM","render","domain","clientId","redirectUri","window","location","origin","document","getElementById"],"mappings":"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","file":"static/js/main.85dcf47f.chunk.js","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport './login.css';\nimport { useAuth0, withAuth0 } from '@auth0/auth0-react';\n\n\nfunction LoginButton() {\n    const { isAuthenticated, loginWithRedirect } = useAuth0()\n\n    return !isAuthenticated && (\n        <div className='login-box'>\n            <h1>GIFSMS</h1>\n            <button onClick={loginWithRedirect}>\n                Login Here\n            </button>\n        </div>\n\n    )\n\n}\n\nexport default withAuth0(LoginButton);","import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nconst superagent = require('superagent');\nconst io = require('socket.io-client');\nrequire('dotenv').config();\nconst HOST = process.env.REACT_APP_HOST || 'http://localhost:3001';\nconst socket = io.connect(`${HOST}/gifs`);\n\nlet Chat = ({ user }) => {\n\n    const [state, setState] = useState({ message: '', user: '' });\n    const [chat, setChat] = useState([]);\n    const [participants, setParticipants] = useState([]);\n    const [rooms, setRooms] = useState([]);\n    const [newRoom, setNewRoom] = useState('');\n    const [gifArray, setGifArray] = useState([]);\n    const [activeRoom, setActiveRoom] = useState('Main Room');\n\n    const onChang = (e) => {\n        setState({ ...state, message: e.target.value })\n    }\n\n    useEffect(() => {\n        //Notifies when user joines room\n        socket.on('user joined', payload => {\n            console.log(payload);\n            //Sets chat notification of user joining room\n            setChat(arr => [...arr, { type: \"notification\", message: `User ${payload.user} has joined the room`, user: payload.user }])\n        });\n\n        //Receives list of participants from socket server\n        socket.on('get participants', payload => {\n            setParticipants(payload.participants)\n        })\n\n        //Receives list of rooms\n        socket.on('get rooms', payload => {\n            setRooms(payload.rooms);\n        })\n\n        //User has sent a message\n        socket.on('message', payload => {\n            //Updates the chat message list\n            setChat(arr => [...arr, { message: payload.message, user: payload.user }])\n        });\n\n        //Once User logs in, updates state for current user\n        setState({ ...state, user });\n\n        //Notifies when user leaves a room\n        socket.on('user disconnected', payload => {\n            setChat(arr => [...arr, { type: \"notification\", message: `User ${payload.user} has left the room`, user: payload.user }])\n        })\n\n        // eslint-disable-next-line\n    }, [])\n\n    // Have user join main room after login\n    // load trending gifs to the gifArray\n    useEffect(() => {\n        if (state.user) {\n            let rez = []\n            let url = `https://api.giphy.com/v1/gifs/trending?limit=5`\n            superagent.get(url)\n                .query({ api_key: `${process.env.REACT_APP_GIF_API}` })\n                .then(function (results) {\n                    let base = results.body.data\n                    base.forEach(el => {\n                        rez.push(el.images.fixed_width.url)\n                    })\n\n                    setGifArray(arr => [...rez])\n                })\n                .catch(function (error) {\n                    console.log('Womp Womp', error);\n                    // res.status(500).send('we messed up');\n                })\n            socket.emit('join', { user: state.user, room: \"Main Room\" })\n        }\n    }, [state.user])\n\n\n\n    // method to fetch Giphy API on chat input\n    const Data = { set: [] };\n    Data.handleAPICall = async (req, res) => {\n        const url = `https://api.giphy.com/v1/gifs/search?q=${state.message}&limit=5`;\n        superagent.get(url)\n            .query({ api_key: `${process.env.REACT_APP_GIF_API}` })\n            .then(function (superagentResults) {\n                Data.results = superagentResults\n                let workable = Data.results.body.data\n                workable.forEach(el => {\n                    Data.set.push(el.images.fixed_width.url)\n                })\n                setGifArray(arr => [...Data.set])\n                Data.set = []\n            })\n            .catch(function (error) {\n                console.log('Womp Womp', error);\n            })\n    }\n\n    //\"translate\" API call to Giphy\n    const gamble = async (req, res) => {\n        const url = `https://api.giphy.com/v1/gifs/translate?s=${state.message}`;\n        superagent.get(url)\n            .query({ api_key: `${process.env.REACT_APP_GIF_API}` })\n            .then(function (superagentResults) {\n                let workable = superagentResults.body.data\n                socket.emit('message', { message: workable.images.fixed_width.url, user: state.user, room: activeRoom })\n            })\n            .catch(function (error) {\n                console.log('Womp Womp');\n                // res.status(500).send('we messed up');\n            })\n    }\n\n\n    //method for images to send on click\n    const clickMe = (e) => {\n        e.preventDefault();\n        socket.emit('message', { message: e.target.src, user: state.user, room: activeRoom })\n        setState({ ...state, message: '' })\n    }\n\n    //function to render the gifs from api call\n    const gifWindow = (data) => {\n        return data.map(el => (\n            <div className=\"gif-prev\">\n                <img src={el} alt={el} onClick={(e) => clickMe(e)} />\n            </div>\n\n        ))\n    }\n\n\n    //Displays the chat messages\n    const chatWindow = () => {\n        return chat.map(({ message, user, type }, index) => (\n            type === 'notification' ?\n                <div key={index} className=\"notification\">\n                    <h4>\n                        {message}\n                    </h4>\n                </div>\n                :\n                <div key={index} className={user === state.user ? \"my-message\" : \"message\"}>\n                    <div>\n                        <img alt={index} src={message} />\n                        <h2>{user}</h2>\n                    </div>\n                </div>\n        ))\n    }\n\n    //Displays the participants\n    const chatParticipants = () => {\n        return activeRoom ? participants.map((user, index) => (\n            <div key={index}>\n                <h3>\n                    {user}\n                </h3>\n            </div>\n        ))\n\n            : \"\"\n    }\n\n    //Displays the chat rooms\n    const chatRooms = () => {\n        return rooms.map((room, index) => (\n            <div key={index}>\n                <h3 room={room} onClick={switchRoom}>\n                    {room} {room === activeRoom ? \" - active\" : \"\"}\n                </h3>\n            </div>\n        ))\n    }\n\n    const switchRoom = (e) => {\n        let selectedRoom = e.target.getAttribute('room');\n        if (activeRoom !== selectedRoom) {\n            if (activeRoom) {\n                socket.emit('leave', { user: state.user, room: activeRoom });\n            }\n            setChat([]);\n            socket.emit('join', { user: state.user, room: selectedRoom });\n            setActiveRoom(selectedRoom);\n        }\n    }\n\n    //Users should be able to create own public rooms or private rooms to specific users\n    const joinRoom = () => {\n        if (newRoom) {\n            setChat([]);\n            socket.emit('join', { user: state.user, room: newRoom });\n            setActiveRoom(newRoom);\n        }\n        setNewRoom('');\n    }\n\n    //leave room and update current room\n    const leaveRoom = () => {\n        setChat([]);\n        setParticipants([]);\n        socket.emit('leave', { user: state.user, room: activeRoom });\n        setActiveRoom('');\n    }\n\n    //I want to press enter to submit\n    const ent = (e) => {\n        if (e.key === \"Enter\") { Data.handleAPICall() }\n    }\n\n\n    return (\n        <>\n            <div className=\"chat-container\">\n                <div className=\"side-nav\">\n                    <div className=\"rooms\">\n                        <h2>Chat Rooms</h2>\n                        {\n                            rooms && (\n                                <>\n                                    {chatRooms()}\n                                </>\n                            )\n                        }\n                        <div className=\"create-room\">\n                            <input type=\"text\" placeholder=\"Create Room\" value={newRoom} onChange={e => setNewRoom(e.target.value)} />\n                            <button onClick={joinRoom}><i class=\"fas fa-plus-square\"></i></button>\n                        </div>\n                        {/* <button onClick={leaveRoom}>Leave Room</button> */}\n\n                    </div>\n                    <div className=\"participants\">\n                        <h2>Chat Participants</h2>\n                        {\n                            participants && (\n                                <>\n                                    {chatParticipants()}\n                                </>\n                            )\n                        }\n                    </div>\n                </div>\n                <div className=\"chat\">\n                    <h2>Chat</h2>\n                    <div className=\"chatArea\">\n                        {chatWindow()}\n                    </div>\n                </div>\n\n                <div className=\"searcher\">\n                    <div className=\"search-side\">\n                        <h2>Giphys</h2>\n                    </div>\n                    <div className=\"search-gifs\">\n                        <input placeholder=\"Search Giphs\" type=\"text\" onChange={(e) => onChang(e)} onKeyDown={(e) => ent(e)} value={state.message} />\n                        <button onClick={Data.handleAPICall}>Giph Me</button>\n                    </div>\n\n                    <button onClick={gamble}>Random Giph!</button>\n\n\n                    <div className='gifTown'>\n                        {gifWindow(gifArray)}\n                    </div>\n                </div>\n\n\n            </div>\n        </>\n\n    )\n}\n\nexport default Chat;\n\n\n\n\n\n\n","import './App.css';\n\nimport Login from './login.js'\nimport Chat from './chat.js';\nimport { withAuth0 } from '@auth0/auth0-react';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {}\n    }\n  }\n\n  userSetter(info) {\n    this.setState({ user: { info } })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        </header>\n        <body>\n          {!this.props.auth0.isAuthenticated\n            ? <Login />\n            : <Chat user={this.props.auth0.user.nickname} />}\n        </body>\n      </div>\n    );\n  }\n\n}\n\nexport default withAuth0(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nconst DOMAIN = process.env.REACT_APP_DOMAIN;\nconst CID = process.env.REACT_APP_CLIENT_ID;\n\nReactDOM.render(\n  <Auth0Provider\n     domain= {DOMAIN}\n     clientId= {CID}\n     redirectUri={window.location.origin}\n >\n   <App />\n </Auth0Provider>,\ndocument.getElementById('root')\n);\n"],"sourceRoot":""}